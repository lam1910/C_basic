#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct cursedWord
{
  char word[20];
  int size;
  struct cursedWord* next;
}cursedWord_L;
typedef cursedWord_L* cursedWord_LPtr;
void addToList(cursedWord_LPtr* hd, int size, char* word)
{
  cursedWord_LPtr ptr = (cursedWord_LPtr) malloc (sizeof(cursedWord_L));
  strcpy(ptr->word, word);
  ptr->size = size;
  if (*hd == NULL)
    ptr->next = NULL;
  else
    ptr->next = *hd;
  *hd = ptr;
}
  

int main(int argc, char *argv[])
{
  char filename[100];
  char rep;

  if (argc < 3)
    {
      printf("Not enough arguments. Exit!");
      exit(1);
    }
  else if (argc > 3)
    {
      printf("Too many arguments. Exit!");
      exit(1);
    }
  else
    {
      strcpy(filename,  argv[1]);
      strcpy(rep, argv[2]);
    }

  FILE * fp; 
  fp = fopen (filename, "a");
  if(fp == NULL)
    {
      perror("Error in opening file");
      return(-1);
    }
  char *e;
  e = (char *)malloc(20 * sizeof(char));
  int n = 1;
  do
    {
      char c = fgetc(fp);
      if(feof(fp))
	{
          break ;
        }
      else if (c != ' ')
	{
	  n ++;
 	}
      else if (c == ' ')
	{
	  fgets(e, n, fp);
	  // if (e 
	  n = 1;
	}
    } while(1);
      free(filename);
      free(e);
      fclose(fp);
      return 0;
 }
